#summary BT - Lights Documentation page
#labels Phase-Implementation,Featured
<wiki:toc max_depth="2" />

= Bluetooth SPP Protocol = 
This page gives an overview of the used SPP Serial protocol


=Command classes (4bit)[0:3]:=
||channel||0x00||single channel command||
||global||0x01||global setting command||
||at cmd||0x02||AT command for the BT chip||
||port||0x03||direct port command that controls netduino functions||


== Command Types ==

==Channel mode (4bit)[4:7]:==
||No Change||0x00||no change of current mode||
||Direct Mode||0x01||set value||
||On||0x02||set to On||
||Off||0x03||set to off||
||Func||0x04||set a preprogrammed function||
||Get value||0x05||Get value of channel(s)||
||Set value||0x06||Set value of channel(s)||
||Set Max||0x07||set maximum value of channel(s)||
||Set Min||0x08||set minimum value of channel(s)||
||Set Delay||0x09||set delay value of channel(s)||
||Set Period||0x0A||set period value of channel(s)||
||Restart||0x0B||restart timer of channel(s)||

==Address (16bit)[8:23]:==
Channels can be address by a seperate bit in the command. Thus making it possible to send
commands simultaniously.

==Channel value (8bit)[24:31]:==
All values from 0 to 255

==CRC (8bit)[32:39]==
The CRC is the sum of CLA, MOD and VAL (has an overflow so this is not a real CRC)

Example:
Set channel 1 to fade (value doesn't matter)
{{{
|CLA |MOD |       ADR         |   VAL   |   CRC   |
|0000|0100|0000|0000|0000|0001|0000|0000|0000|0100|
|  byte 0 |  byte 1 |  byte 2 |  byte 3 |  byte 4 |
}}}

= General commands (gc) =

As seen in the channel command section it is possible to send global commands:

==Global mode(4bit)[4:7]:==
||Get the command counter||0x00||
||Reset the command counter||0x01||
||get the current cpu usage||0x02||
||trace out the error log||0x03||
||reset all channels||0x04||

Example:
Read the error log (value and address are not important but will be checked by checksum anyways)
{{{
|CLA |MOD |       ADR         |   VAL   |   CRC   |
|0001|0011|0000|0000|0000|0000|0000|0000|0001|0011|
|  byte 0 |  byte 1 |  byte 2 |  byte 3 |  byte 4 |
}}}

= Direct port commands (dp) =

= Error Codes =
The error codes generated by the firmware are stored in 255 byte ring memory. They contain the code and the timestamp
{{{
|CLA |MOD |  ERROR  |          TIMESTAMP          |
|0000|0000|0000|0000|0000|0000|0000|0000|0000|0000|
|  byte 0 |  byte 1 |  byte 2 |  byte 3 |  byte 4 |
}}}
This is inconsitent with the rest but to keep the 5 byte length it was necessary to remove the CRC in case of this response.
The CLA and MOD are currently "don't care" but will be corrected in a future release.
|| *FW Name* || *Meaning* || *Description* ||
|| CMD_UNKNOWN || Unknown command || Just unknown command (maybe came through checksum by incident) ||
|| CMD_CORRUPT || Corrupt command || Not a channel (internal) command ||
|| CMD_ASSERT_FAIL || Not an internal command (AT command) || It was neither internal nor external (maybe length 0) ||
|| INTERPRETATION_ERROR || Too long or bad command || Too many commands comming in ||
|| WRONG_FUNCTION_POINTER || Function is not valid || This functioin (fade, in, ou) is not declared for channels ||
|| CHANNEL_VALUE_ASSERT || Value assertion error || the channel changed its value very fast, this should not happen accidently ||