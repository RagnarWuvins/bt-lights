#summary BT - Lights Documentation page
<wiki:toc max_depth="2" />

= Bluetooth SPP Protocol = 
This page gives an overview of the used SPP Serial protocol

== Command Types ==

|| *Type* || *Definition* ||
|| at || AT commands for the bluetooth module ||
|| cc || Channel commands that address each channel ||

Upper or lower case will be ignored for all commands.


== AT (at) ==

For an exact definition please see the BT firmware [https://code.google.com/p/bt-lights/source/browse/trunk/Documentation/HC-0305%20serail%20module%20AT%20commamd%20set%20201104%20revised.pdf documentation].
These commands are actually a wrapper for the BT serial connection. They will be forwarded by the hardware and will not need the "\n\r" at the end.

|| *Command* || *Description* || *Response* || *Remark* ||
|| AT || || OK || None  ||
|| AT+RESET || || OK || None ||
|| AT+VERSION? || Get the soft version || +VERSION: Param || None ||
|| AT+ORGL || Restore default status || OK || None ||
|| AT+ADDR? || Get Bluetooth module address || +ADDR: Param OK || None ||
|| AT+NAME=Param || Set device's name || OK || None ||
|| AT+NAME? || Get device's name || +NAME Param, OK / FAIL || None ||
|| AT+RNAME?Param1 || Get the remote Bluetooth device's name || +NAME:Param2 OK / FAIL || Example: Bluetooth device address: 00:02:72:od:22:24;<br> device name: Bluetooth <br>at+rname? 0002,72,od2224\r\n +RNAME:Bluetooth <br>OK ||


== Channel commands (cc) ==

Channel commands control the behaviour of the channel. Here is the protocol of the 7 Bit commands:

===Command classes (4bit)[0:3]:===
||channel||0x00||single channel command||
||global||0x01||global setting command||
||at cmd||0x02||AT command for the BT chip||
||port||0x03||direct port command that controls netduino functions||

===Channel mode (4bit)[4:7]:===
||No Change||0x00||no change of current mode||
||Direct Mode||0x01||set value||
||On||0x02||set to On||
||Off||0x03||set to off||
||Func||0x04||set a preprogrammed function||
||Get value||0x05||Get value of channel(s)||
||Set Max||0x06||set maximum value of channel(s)||
||Set Min||0x07||set minimum value of channel(s)||
||Set Delay||0x08||set delay value of channel(s)||
||Set Period||0x09||set period value of channel(s)||
||Restart||0x0A||restart timer of channel(s)||

===Address (16bit)[8:23]:===
Channels can be address by a seperate bit in the command. Thus making it possible to send
commands simultaniously.

===Channel value (8bit)[24:31]:===
All values from 0 to 255

===CRC (8bit)[32:39]===
The CRC is the sum of CLA, MOD and VAL (has an overflow so this is not a real CRC)

Example:
Set channel 1 to fade (value doesn't matter)
{{{
|CLA |MOD |       ADR         |   VAL   |   CRC   |
|0000|0100|0000|0000|0000|0001|0000|0000|0000|0100|
|  byte 0 |  byte 1 |  byte 2 |  byte 3 |  byte 4 |
}}}

== General commands (gc) ==

As seen in the channel command section it is possible to send global commands:


===Global mode(4bit)[4:7]:===
||Get the command counter||0x00||
||Reset the command counter||0x01||
||get the current cpu usage||0x02||
||trace out the error log||0x03||
||reset all channels||0x04||

Example:
Read the error log (value and address are not important but will be checked by checksum anyways)
{{{
|CLA |MOD |       ADR         |   VAL   |   CRC   |
|0001|0011|0000|0000|0000|0000|0000|0000|0001|0011|
|  byte 0 |  byte 1 |  byte 2 |  byte 3 |  byte 4 |
}}}

== Direct port commands (dp) ==